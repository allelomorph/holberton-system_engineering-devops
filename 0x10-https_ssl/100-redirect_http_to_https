global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # max concurrent connections
        maxconn 2048
        # max size of temporary DHE keys
        tune.ssl.default-dh-param 2048

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

        # adds `X-Forwarded-For` headers to each request
        option forwardfor
        # reduces latency by closing connections but maintaining keep-alives
        option http-server-close

frontend www-http
         bind *:80
         reqadd X-Forwarded-Proto:\ http
         default_backend backend_nodes

frontend www-https
        bind *:443 ssl crt /etc/haproxy/certs/www.journeyman-syntax.tech.pem
        http-request set-header X-SSL %[ssl_fc]
        reqadd X-Forwarded-Proto:\ https
        default_backend backend_nodes

backend backend_nodes
        # Redirect with code 301 so the browser understands it is a redirect. If it's not SSL_FC.
        # ssl_fc: Returns true when the front connection was made via an SSL/TLS transport
        # layer and is locally deciphered. This means it has matched a socket declared
        # with a "bind" line having the "ssl" option.
        redirect scheme https code 301 if !{ ssl_fc }
        balance roundrobin
        server 1690-web-01 35.196.49.136:80 check
        server 1690-web-02 54.234.168.105:80 check
